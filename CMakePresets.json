{
	// 本文件是一个例子，可以作为 CMakeUserPresets.json 的模板。
	// 注意不要将自己本地的路径提交上来。
	"version": 6,
	"cmakeMinimumRequired": {
		"major": 3,
		"minor": 23,
		"patch": 0
	},
	// 推荐环境：
	//  1. 从官网下载了LLVM并安装在默认路径
	//  2. 下载了Ninja并且已经加入到PATH
	//  3. 从官网下载了Doxygen并安装在默认路径，如果没有，将LLAMA_BUILD_DOCS设置为OFF
	// 拥有以上环境后，在VSCode + CMake Tools拓展的环境下，可以一键编译：
	// Windows: cmake --workflow --prefix win-clang-ci
	// Linux: cmake --workflow --prefix linux-clang-ci
	"configurePresets": [
		{
			"name": "base",
			"hidden": true,
			"cacheVariables": {
				"CMAKE_EXPORT_COMPILE_COMMANDS": "ON",
				"LLAMA_BUILD_DOCS": "ON",
				"LLAMA_AUTO_HOUSEKEEP": "OFF"
			}
		},
		{
			"name": "win-clang",
			"displayName": "Windows Clang Default Config",
			"inherits": "base",
			"generator": "Ninja",
			"binaryDir": "${sourceDir}/build/",
			"environment": {
				"CC": "C:\\Program Files\\LLVM\\bin\\clang.exe",
				"CXX": "C:\\Program Files\\LLVM\\bin\\clang++.exe"
			}
		},
		{
			"name": "linux-clang",
			"displayName": "Linux Clang Default Config",
			"inherits": "base",
			"generator": "Ninja",
			"binaryDir": "${sourceDir}/build/",
			"environment": {
				"CC": "/usr/bin/clang",
				"CXX": "/usr/bin/clang++"
			}
		}
	],
	"buildPresets": [
		{
			"name": "win-clang-build",
			"displayName": "Windows Clang Default Build",
			"configurePreset": "win-clang"
		},
		{
			"name": "linux-clang-build",
			"displayName": "Linux Clang Default Build",
			"configurePreset": "linux-clang"
		}
	],
	"testPresets": [
		{
			"name": "win-clang-test",
			"displayName": "Windows Clang Default Test",
			"configurePreset": "win-clang",
			"execution": {}
		},
		{
			"name": "linux-clang-test",
			"displayName": "Linux Clang Default Test",
			"configurePreset": "linux-clang",
			"execution": {}
		}
	],
	"workflowPresets": [
		{
			"name": "win-clang-ci",
			"steps": [
				{
					"type": "configure",
					"name": "win-clang"
				},
				{
					"type": "build",
					"name": "win-clang-build"
				},
				{
					"type": "test",
					"name": "win-clang-test"
				}
			]
		},
		{
			"name": "linux-clang-ci",
			"steps": [
				{
					"type": "configure",
					"name": "linux-clang"
				},
				{
					"type": "build",
					"name": "linux-clang-build"
				},
				{
					"type": "test",
					"name": "linux-clang-test"
				}
			]
		}
	]
}